{"ast":null,"code":"import jwt_decode from \"jwt-decode\";\nimport { RestRequest } from \"./requestService\";\nimport { endpoints } from \"../constant/endpoints\";\n\nconst getUserFromStorage = () => {\n  let token = localStorage.getItem('Jwt token');\n  if (!token) return null;\n  let data = jwt_decode(token);\n  let user = {\n    name: data.name,\n    surname: data.surname,\n    email: data.email\n  };\n  return user;\n};\n\nconst afterLogin = response => {\n  if (response.data.token) {\n    localStorage.setItem('Jwt token', `${response.data.token}`);\n  }\n\n  return response;\n};\n\nconst registration = (name, surname, email, password) => RestRequest.post(endpoints.registration, {}, {\n  name,\n  surname,\n  email,\n  password\n}).then(afterLogin);\n\nconst login = (email, password) => RestRequest.post(endpoints.login, {}, {\n  email,\n  password\n}).then(afterLogin);\n\nconst logout = () => {\n  localStorage.removeItem('Jwt token');\n};\n\nexport default {\n  login,\n  getUserFromStorage,\n  registration,\n  logout\n};","map":{"version":3,"sources":["/Users/ilyayelagov/webprojects/mpp_bare/frontent/src/connection/auth.js"],"names":["jwt_decode","RestRequest","endpoints","getUserFromStorage","token","localStorage","getItem","data","user","name","surname","email","afterLogin","response","setItem","registration","password","post","then","login","logout","removeItem"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,SAAR,QAAwB,uBAAxB;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAC7B,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAZ;AACA,MAAI,CAACF,KAAL,EAAY,OAAO,IAAP;AACZ,MAAIG,IAAI,GAAGP,UAAU,CAACI,KAAD,CAArB;AACA,MAAII,IAAI,GAAG;AACPC,IAAAA,IAAI,EAAEF,IAAI,CAACE,IADJ;AAEPC,IAAAA,OAAO,EAAEH,IAAI,CAACG,OAFP;AAGPC,IAAAA,KAAK,EAAEJ,IAAI,CAACI;AAHL,GAAX;AAKA,SAAOH,IAAP;AACH,CAVD;;AAYA,MAAMI,UAAU,GAAGC,QAAQ,IAAI;AAC3B,MAAIA,QAAQ,CAACN,IAAT,CAAcH,KAAlB,EAAyB;AACrBC,IAAAA,YAAY,CAACS,OAAb,CAAqB,WAArB,EAAmC,GAAED,QAAQ,CAACN,IAAT,CAAcH,KAAM,EAAzD;AACH;;AACD,SAAOS,QAAP;AACH,CALD;;AAMA,MAAME,YAAY,GAAG,CAACN,IAAD,EAAOC,OAAP,EAAgBC,KAAhB,EAAuBK,QAAvB,KACjBf,WAAW,CAACgB,IAAZ,CAAiBf,SAAS,CAACa,YAA3B,EAAyC,EAAzC,EAA6C;AAACN,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA,KAAhB;AAAuBK,EAAAA;AAAvB,CAA7C,EACKE,IADL,CACUN,UADV,CADJ;;AAIA,MAAMO,KAAK,GAAG,CAACR,KAAD,EAAQK,QAAR,KACVf,WAAW,CAACgB,IAAZ,CAAiBf,SAAS,CAACiB,KAA3B,EAAkC,EAAlC,EAAsC;AAACR,EAAAA,KAAD;AAAQK,EAAAA;AAAR,CAAtC,EACKE,IADL,CACUN,UADV,CADJ;;AAIA,MAAMQ,MAAM,GAAG,MAAM;AACjBf,EAAAA,YAAY,CAACgB,UAAb,CAAwB,WAAxB;AACH,CAFD;;AAGA,eAAe;AACXF,EAAAA,KADW;AAEXhB,EAAAA,kBAFW;AAGXY,EAAAA,YAHW;AAIXK,EAAAA;AAJW,CAAf","sourcesContent":["import jwt_decode from \"jwt-decode\";\nimport {RestRequest} from \"./requestService\";\nimport {endpoints} from \"../constant/endpoints\";\n\nconst getUserFromStorage = () => {\n    let token = localStorage.getItem('Jwt token');\n    if (!token) return null;\n    let data = jwt_decode(token);\n    let user = {\n        name: data.name,\n        surname: data.surname,\n        email: data.email\n    };\n    return user;\n};\n\nconst afterLogin = response => {\n    if (response.data.token) {\n        localStorage.setItem('Jwt token', `${response.data.token}`);\n    }\n    return response;\n};\nconst registration = (name, surname, email, password) =>\n    RestRequest.post(endpoints.registration, {}, {name, surname, email, password})\n        .then(afterLogin);\n\nconst login = (email, password) =>\n    RestRequest.post(endpoints.login, {}, {email, password})\n        .then(afterLogin);\n\nconst logout = () => {\n    localStorage.removeItem('Jwt token');\n};\nexport default {\n    login,\n    getUserFromStorage,\n    registration,\n    logout\n}\n"]},"metadata":{},"sourceType":"module"}