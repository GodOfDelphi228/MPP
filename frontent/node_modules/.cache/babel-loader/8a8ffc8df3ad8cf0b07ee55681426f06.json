{"ast":null,"code":"var _jsxFileName = \"/Users/ilyayelagov/webprojects/mpp_bare/frontent/src/AuthProvider.js\";\nimport * as React from \"react\";\nimport authService from '../service/authService';\nexport const AuthContext = React.createContext();\nexport default class AuthProvider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateCurrentUser = user => {\n      this.setState({\n        user\n      });\n    };\n\n    this.login = (email, password) => authService.login(email, password).then(response => this.updateCurrentUser(authService.getUserFromStorage()));\n\n    this.registration = (name, surname, email, password) => authService.registration(name, surname, email, password).then(response => this.updateCurrentUser(authService.getUserFromStorage()));\n\n    this.logout = (username, password) => {\n      authService.logout(username, password);\n      this.updateCurrentUser(null);\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.updateCurrentUser(authService.getUserFromStorage());\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n      value: {\n        currentUser: this.state.user,\n        login: this.login,\n        registration: this.registration,\n        logout: this.logout\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}","map":{"version":3,"sources":["/Users/ilyayelagov/webprojects/mpp_bare/frontent/src/AuthProvider.js"],"names":["React","authService","AuthContext","createContext","AuthProvider","Component","constructor","props","updateCurrentUser","user","setState","login","email","password","then","response","getUserFromStorage","registration","name","surname","logout","username","state","componentDidMount","render","currentUser","children"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,OAAO,MAAMC,WAAW,GAAGF,KAAK,CAACG,aAAN,EAApB;AAEP,eAAe,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,iBATmB,GASCC,IAAI,IAAI;AACxB,WAAKC,QAAL,CAAc;AAACD,QAAAA;AAAD,OAAd;AACH,KAXkB;;AAAA,SAanBE,KAbmB,GAaX,CAACC,KAAD,EAAQC,QAAR,KACJZ,WAAW,CAACU,KAAZ,CAAkBC,KAAlB,EAAyBC,QAAzB,EACKC,IADL,CACUC,QAAQ,IAAI,KAAKP,iBAAL,CAAuBP,WAAW,CAACe,kBAAZ,EAAvB,CADtB,CAde;;AAAA,SAiBnBC,YAjBmB,GAiBJ,CAACC,IAAD,EAAMC,OAAN,EAAeP,KAAf,EAAsBC,QAAtB,KACXZ,WAAW,CAACgB,YAAZ,CAAyBC,IAAzB,EAA8BC,OAA9B,EAAuCP,KAAvC,EAA8CC,QAA9C,EACKC,IADL,CACUC,QAAQ,IAAI,KAAKP,iBAAL,CAAuBP,WAAW,CAACe,kBAAZ,EAAvB,CADtB,CAlBe;;AAAA,SAqBnBI,MArBmB,GAqBV,CAACC,QAAD,EAAWR,QAAX,KAAwB;AAC7BZ,MAAAA,WAAW,CAACmB,MAAZ,CAAmBC,QAAnB,EAA6BR,QAA7B;AACA,WAAKL,iBAAL,CAAuB,IAAvB;AACH,KAxBkB;;AAEf,SAAKc,KAAL,GAAa,EAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKf,iBAAL,CAAuBP,WAAW,CAACe,kBAAZ,EAAvB;AACH;;AAmBDQ,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,WAAD,CAAa,QAAb;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,WAAW,EAAE,KAAKH,KAAL,CAAWb,IADrB;AAEHE,QAAAA,KAAK,EAAE,KAAKA,KAFT;AAGHM,QAAAA,YAAY,EAAE,KAAKA,YAHhB;AAIHG,QAAAA,MAAM,EAAE,KAAKA;AAJV,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOK,KAAKb,KAAL,CAAWmB,QAPhB,CADJ;AAWH;;AAvCqD","sourcesContent":["import * as React from \"react\";\nimport authService from '../service/authService';\n\nexport const AuthContext = React.createContext();\n\nexport default class AuthProvider extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {\n        this.updateCurrentUser(authService.getUserFromStorage());\n    }\n\n    updateCurrentUser = user => {\n        this.setState({user});\n    };\n\n    login = (email, password) =>\n        authService.login(email, password)\n            .then(response => this.updateCurrentUser(authService.getUserFromStorage()));\n\n    registration = (name,surname, email, password) =>\n        authService.registration(name,surname, email, password)\n            .then(response => this.updateCurrentUser(authService.getUserFromStorage()));\n\n    logout = (username, password) => {\n        authService.logout(username, password);\n        this.updateCurrentUser(null)\n    };\n\n    render() {\n        return (\n            <AuthContext.Provider\n                value={{\n                    currentUser: this.state.user,\n                    login: this.login,\n                    registration: this.registration,\n                    logout: this.logout\n                }}>\n                {this.props.children}\n            </AuthContext.Provider>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}